设置在容器上的{
display: flex;
justify-content:
				center:居中
				flex-end:靠右
				space-between:两端对齐且间距相等
				space-around:项目间间距为左右两侧项目到容器间距二倍
				space-evenly:项目间距相等
align-items:
			flex-start:默认位置
			center:Y轴居中
			flex-end: Y轴底部

项目居中:
align-item: center;
justify-content: center;

<!---->

flex-direaction:
				row:默认
				row-reverse:默认排序反转
				
flex-direction:
			    column:竖行
			    column-reverse:竖行反转

<!---->

flex-wrap:
	  	  wrap:当宽度大于容器时换行
		  nowrap:当宽度大于容器时会强行等于容器而不换行
}

设在项目上的{

html:
<div class="box">1</div>
<dix class="box">2</dix>
<div class="box">3</div>

css:
.box{
	display:flex;
}
.box:nth-child(1){
	order:2;
}
.box:nth-child(2){
	order:1;
}
.box:nth-child(3){
	order:0;
}
盒子排序变为 3 2 1

<!---->
.box:nth-child(1){
	align-self: center; 居中
	align-self: flex-end; 底端
}

<!---->
flex-grow

默认为零，如果两个0一个1，1会占所有剩余空间
如果两个1一个0，两个1会平分所有空间
.box:nth-child(1){
	flex-grow: 0; 默认0
}
.box:nth-child(2){
	flex-grow: 1;
}
.box:nth-child(3){
	flex-grow: 1;
}

<!---->
flex-shrink

默认为1，空间不足时所有项目同比缩小
如设为0，即使空间不足自身也不缩小。
.box:nth-child(2){
	flex-shrink: 0;
}

<!---->
flex-basis

默认auto，项目保持默认宽度或width宽度
flex-basis 可覆盖width属性
.box:nth-child(2){
	flex-basis: 80px;
	width: 60px;
}
结果为80px

<!---->



}
